name: Mentorship Program Automation

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      owner:
        description: "Owner of the project (user or organization)"
        required: false
        default: ${{ github.repository_owner }}
      action:
        description: 'Action to perform'
        required: true
        default: 'create-project'
        type: choice
        options:
          - create-project
          - migrate-pairings
          - generate-folders
          - sync-projects
      project_title:
        description: 'Project title (for create-project)'
        required: false
        default: 'Mentorship 2025'
      pairings_path:
        description: 'Path to pairings folder (for migration)'
        required: false
        default: 'pairings'
      pair_data_file:
        description: 'JSON file with pair data'
        required: false
  schedule:
    # Run weekly sync on Sundays at 12:00 UTC
    - cron: '0 12 * * 0'
  issues:
    types: [opened, edited]

jobs:
  mentorship-automation:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Set up environment
        run: |
          chmod +x scripts/manage_mentorship_v2.py
          chmod +x scripts/migrate_pairings_to_projects_v2.py
          chmod +x scripts/process_mentorship_issue.py

      - name: Create mentorship project
        if: github.event.inputs.action == 'create-project' || github.event_name == 'schedule'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          python scripts/manage_mentorship_v2.py \
            --owner ${{ github.repository_owner }} \
            --repo ${{ github.event.repository.name }} \
            --token ${{ secrets.GH_TOKEN }} \
            --action create-project \
            --project-title "${{ github.event.inputs.project_title || 'Mentorship 2025' }}"

      - name: Migrate from pairings folder
        if: github.event.inputs.action == 'migrate-pairings'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          python scripts/migrate_pairings_to_projects_v2.py \
            --pairings-path "${{ github.event.inputs.pairings_path || 'pairings' }}" \
            --owner ${{ github.repository_owner }} \
            --repo ${{ github.event.repository.name }} \
            --token ${{ secrets.GH_TOKEN }} \
            --create-project \
            --generate-folders

      - name: Generate folder structure
        if: github.event.inputs.action == 'generate-folders' && github.event.inputs.pair_data_file
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          python scripts/manage_mentorship_v2.py \
            --owner "${{ github.event.inputs.owner }}" \
            --repo "${{ github.event.repository.name }}" \
            --token ${{ secrets.GH_TOKEN }} \
            --action create-project \
            --project-title "${{ github.event.inputs.project_title || 'Mentorship 2025' }}"

      - name: Process new mentorship issue
        if: github.event_name == 'issues' && contains(github.event.issue.title, 'New Mentorship Pair')
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "Processing new mentorship pair from issue #${{ github.event.issue.number }}"
          python scripts/process_mentorship_issue.py \
            --issue-number ${{ github.event.issue.number }} \
            --owner ${{ github.repository_owner }} \
            --repo ${{ github.repository.name }} \
            --token ${{ secrets.GH_TOKEN }}

      - name: Commit generated files
        if: contains(fromJSON('["generate-folders","migrate-pairings"]'), github.event.inputs.action)
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-generated mentorship pair folders"
            git push

      - name: Create summary comment
        if: always() && github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            const action = '${{ github.event.inputs.action }}';
            const success = '${{ job.status }}' === 'success';
            
            let message = success ? 
              `‚úÖ Mentorship automation completed successfully!\n\n**Action**: ${action}` :
              `‚ùå Mentorship automation failed.\n\n**Action**: ${action}`;
            
            if (action === 'create-project') {
              message += '\n\nüéØ **Next Steps:**\n- Check the newly created GitHub Project\n- Start adding mentor-mentee pairs as project cards';
            } else if (action === 'migrate-pairings') {
              message += '\n\nüìÅ **Migration Results:**\n- Check migration_report.md for details\n- Review generated folder structure\n- Verify project cards created';
            }
            
            message += '\n\nüìö **Documentation**: See README.md for usage instructions.';
            
            if (context.payload.issue) {
              github.rest.issues.createComment({
                issue_number: context.payload.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            }
